{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting Started with PointLogic via Python\n",
    "\n",
    "This notebook uses python to make PointLogic API requests\n",
    "\n",
    "- Navigate through PointLogic endpoints \n",
    "- Pull PointLogic Views and the metadata\n",
    "- Generate final PointLogic endpoint for Natural Gas Production and load into a DataFrame\n",
    "\n",
    "Use cases:\n",
    "- How to pull multiple years of Volume History"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### version 0.7\n",
    "###### Disclaimer: The sample code provided is for informational purposes only and should not be considered as professional advice. It is important to thoroughly review and test the code before implementing it in a production environment. S&P Global does not guarantee the accuracy, reliability, or completeness of the code and shall not be held liable for any damages or losses arising from its use."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Initial Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# uncomment below to install dependencies\n",
    "# !pip install requests\n",
    "# !pip install pandas\n",
    "# !pip install numpy\n",
    "# !pip install time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from requests.auth import HTTPBasicAuth\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate your personal access token\n",
    "\n",
    "In the ConnectAPI Landing Page, click on the Personal Access Tokens tile. There you'll find all your active tokens. Click on New Token, give a name to this token, check the \"Never expire\" box, and click Create.\n",
    "**A one time pop-up will show your username and password, save these as they won't show up again.**\n",
    "\n",
    "If you ever want to change your token, you can delete the old one and generate a new one with the prior process."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Paste your Personal Access Token username and password inside the quotes\n",
    "username = ''\n",
    "password = ''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PointLogic \n",
    "\n",
    "In the ConnectAPI Landing Page, click on the Service Documentation (Swagger) tile. PointLogic can be found under \"Climate and Sustainability\", PointLogic and PointLogic Views. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### PointLogic lookup____"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Within PointLogic, there are 10 endpoints call `lookup____` which return the codes that work within the parameters. For example, lookup_region returns the codes for regions in Canada, USA, and Mexico."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Canada</td>\n",
       "      <td>26158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Mexico</td>\n",
       "      <td>26160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Northeast</td>\n",
       "      <td>26104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Southeast</td>\n",
       "      <td>26107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Texas</td>\n",
       "      <td>26108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Western</td>\n",
       "      <td>26109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             name     id\n",
       "0          Canada  26158\n",
       "1          Mexico  26160\n",
       "2   Mid-Continent  26105\n",
       "3       Northeast  26104\n",
       "4  Rocky Mountain  26106\n",
       "5       Southeast  26107\n",
       "6           Texas  26108\n",
       "7         Western  26109"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/lookup_region\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "df1= pd.DataFrame.from_dict(j)\n",
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some `lookup____` calls require other `lookup____` codes to get a response, such as lookup_subregions needs a code from lookup_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>26249</td>\n",
       "      <td>Atlantic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>26255</td>\n",
       "      <td>New England</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>26256</td>\n",
       "      <td>NY/NJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id         name\n",
       "0  26249     Atlantic\n",
       "1  26250   Appalachia\n",
       "2  26255  New England\n",
       "3  26256        NY/NJ"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/lookup_subregion/26104\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "df2= pd.DataFrame.from_dict(j)\n",
    "df2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Retrieve PointLogic Data\n",
    "\n",
    "Natural Gas Production can be found in `pointlogic/production/naturalGas` and using the paramaters found, generate a url to pull the data you'd like. \n",
    "- `startDate` uses the format (MM-DD-YYYYY)\n",
    "- `pageIndex` chooses which page (if multiple) you'd like to pull. If left blank, all pages will be pulled \n",
    "- `pageSize` chooses how many records per page, with a default and limit of 10,000"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PointLogic Views\n",
    "\n",
    "PointLogic Views shows the metadata of the datasets within PointLogic\n",
    "\n",
    "Beginning at `plviews/views`, this returns a list of all the datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>aggregatesampleusdemand_pipe_region_state_type</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>demandforecast_region</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>demandforecast_uslower48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>flowsby_lciid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>flowsby_points_zone</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>gasproduction_point</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>gasproduction_producingarea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>lookup_pipeline</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>lookup_pipelinenoticecategory</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>marketbalances_regions</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>marketbalances_uslower48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>modeleddemand_region_type</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>ngls_padd_refiningdistrict</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>oilproduction_region</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>pipelineflow_throughputs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>pipelinenotice_search</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>pointmetadata_withids</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>stateflows_throughputaggregates</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>us_importsexportsby_points_aggregate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>uslower48supplydemand_currentday_comparemetrics</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>us_samplestorage_facility</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  0\n",
       "0    aggregatesampleusdemand_pipe_region_state_type\n",
       "1                             demandforecast_region\n",
       "2                          demandforecast_uslower48\n",
       "3                                     flowsby_lciid\n",
       "4                               flowsby_points_zone\n",
       "5                               gasproduction_point\n",
       "6                       gasproduction_producingarea\n",
       "7                                   lookup_pipeline\n",
       "8                     lookup_pipelinenoticecategory\n",
       "9                            marketbalances_regions\n",
       "10                         marketbalances_uslower48\n",
       "11                        modeleddemand_region_type\n",
       "12                       ngls_padd_refiningdistrict\n",
       "13                             oilproduction_region\n",
       "14                         pipelineflow_throughputs\n",
       "15                            pipelinenotice_search\n",
       "16                            pointmetadata_withids\n",
       "17                  stateflows_throughputaggregates\n",
       "18             us_importsexportsby_points_aggregate\n",
       "19  uslower48supplydemand_currentday_comparemetrics\n",
       "20                        us_samplestorage_facility"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/plview/views\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "df3= pd.DataFrame(j)\n",
    "df3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PL/views/{viewName}\n",
    "Using `plview/views/{viewName}`, you can see the metadata and definitions of the parameters for each dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A rolling 31 day accounting of modeled natural gas production at a wet gas (wellhead) value and dry gas value (pipeline grade). The modeled production is aggregated by producing area and their respective state and region. Volumes are expressed as million cubic feet per day (MMcf/d).\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>short_name</th>\n",
       "      <th>long_name</th>\n",
       "      <th>description</th>\n",
       "      <th>column_type</th>\n",
       "      <th>column_size</th>\n",
       "      <th>column_decimals</th>\n",
       "      <th>column_is_primary_key</th>\n",
       "      <th>column_is_nullable</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>startdate</td>\n",
       "      <td>startdate</td>\n",
       "      <td></td>\n",
       "      <td>text</td>\n",
       "      <td>65536</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>regiontypeid</td>\n",
       "      <td>regiontypeid</td>\n",
       "      <td></td>\n",
       "      <td>text</td>\n",
       "      <td>65536</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>enddate</td>\n",
       "      <td>enddate</td>\n",
       "      <td></td>\n",
       "      <td>text</td>\n",
       "      <td>65536</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>reporteddate</td>\n",
       "      <td>reporteddate</td>\n",
       "      <td>Date of query execution</td>\n",
       "      <td>text</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>referencedate</td>\n",
       "      <td>referencedate</td>\n",
       "      <td>Calendar date that is synomous with the define...</td>\n",
       "      <td>text</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>region</td>\n",
       "      <td>region</td>\n",
       "      <td>PointLogic defined region name. Regions are a ...</td>\n",
       "      <td>text</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>producingarea</td>\n",
       "      <td>producingarea</td>\n",
       "      <td>PointLogic definition for a geographic collect...</td>\n",
       "      <td>text</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>state</td>\n",
       "      <td>state</td>\n",
       "      <td>PointLogic defined state name. States are a co...</td>\n",
       "      <td>text</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>dryfactoredvalue</td>\n",
       "      <td>dryfactoredvalue</td>\n",
       "      <td>Natural gas production volume in MMcf/d that r...</td>\n",
       "      <td>decimal</td>\n",
       "      <td>38</td>\n",
       "      <td>8</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>wellheadvalue</td>\n",
       "      <td>wellheadvalue</td>\n",
       "      <td>Natural gas production volume in MMcf/d prior ...</td>\n",
       "      <td>decimal</td>\n",
       "      <td>38</td>\n",
       "      <td>6</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>startdate_param</td>\n",
       "      <td>startdate_param</td>\n",
       "      <td></td>\n",
       "      <td>localdate</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>enddate_param</td>\n",
       "      <td>enddate_param</td>\n",
       "      <td></td>\n",
       "      <td>localdate</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>regiontypeid_param</td>\n",
       "      <td>regiontypeid_param</td>\n",
       "      <td></td>\n",
       "      <td>text</td>\n",
       "      <td>65536</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            short_name           long_name  \\\n",
       "0            startdate           startdate   \n",
       "1         regiontypeid        regiontypeid   \n",
       "2              enddate             enddate   \n",
       "3         reporteddate        reporteddate   \n",
       "4        referencedate       referencedate   \n",
       "5               region              region   \n",
       "6        producingarea       producingarea   \n",
       "7                state               state   \n",
       "8     dryfactoredvalue    dryfactoredvalue   \n",
       "9        wellheadvalue       wellheadvalue   \n",
       "10     startdate_param     startdate_param   \n",
       "11       enddate_param       enddate_param   \n",
       "12  regiontypeid_param  regiontypeid_param   \n",
       "\n",
       "                                          description column_type column_size  \\\n",
       "0                                                            text       65536   \n",
       "1                                                            text       65536   \n",
       "2                                                            text       65536   \n",
       "3                             Date of query execution        text          16   \n",
       "4   Calendar date that is synomous with the define...        text          16   \n",
       "5   PointLogic defined region name. Regions are a ...        text         100   \n",
       "6   PointLogic definition for a geographic collect...        text         100   \n",
       "7   PointLogic defined state name. States are a co...        text           2   \n",
       "8   Natural gas production volume in MMcf/d that r...     decimal          38   \n",
       "9   Natural gas production volume in MMcf/d prior ...     decimal          38   \n",
       "10                                                      localdate           7   \n",
       "11                                                      localdate           7   \n",
       "12                                                           text       65536   \n",
       "\n",
       "   column_decimals  column_is_primary_key  column_is_nullable  \n",
       "0                0                  False                True  \n",
       "1                0                  False                True  \n",
       "2                0                  False                True  \n",
       "3                0                  False                True  \n",
       "4                0                  False                True  \n",
       "5                0                  False                True  \n",
       "6                0                  False                True  \n",
       "7                0                  False                True  \n",
       "8                8                  False                True  \n",
       "9                6                  False                True  \n",
       "10               0                  False                True  \n",
       "11               0                  False                True  \n",
       "12               0                  False                True  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/plview/views/gasproduction_producingarea\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "print(j[\"description\"])\n",
    "df4= pd.DataFrame(j[\"elements\"])\n",
    "df4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PLView/count/{viewName}\n",
    "`plview/count/{viewName}`returns a count of all the records in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2852\n"
     ]
    }
   ],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/plview/count/gasproduction_producingarea\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "print(j)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some responses don't include headers, for those use this script to pull the data into a dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<Response [200]>\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reporteddate</th>\n",
       "      <th>flowdate</th>\n",
       "      <th>pointlciid</th>\n",
       "      <th>volume</th>\n",
       "      <th>operationalcapacity</th>\n",
       "      <th>pointzone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2024-03-23</td>\n",
       "      <td>CAGT00001</td>\n",
       "      <td>1675.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2024-03-23</td>\n",
       "      <td>CAGT00002</td>\n",
       "      <td>163.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2024-03-23</td>\n",
       "      <td>CAGT00003</td>\n",
       "      <td>11.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2024-03-23</td>\n",
       "      <td>CAGT00004</td>\n",
       "      <td>0.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2024-03-23</td>\n",
       "      <td>CAGT00005</td>\n",
       "      <td>28.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869311</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2023-12-10</td>\n",
       "      <td>STORA0111</td>\n",
       "      <td>-1891.827156</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869312</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2023-12-10</td>\n",
       "      <td>STORA0114</td>\n",
       "      <td>-227.439901</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869313</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2023-12-10</td>\n",
       "      <td>STORA0117</td>\n",
       "      <td>-821.041297</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869314</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2023-12-10</td>\n",
       "      <td>STORA0120</td>\n",
       "      <td>-6356.674401</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869315</th>\n",
       "      <td>2024-03-20 15:24:52</td>\n",
       "      <td>2023-12-10</td>\n",
       "      <td>STORA0123</td>\n",
       "      <td>-1057.287162</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>869316 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               reporteddate    flowdate pointlciid       volume  \\\n",
       "0       2024-03-20 15:24:52  2024-03-23  CAGT00001  1675.000000   \n",
       "1       2024-03-20 15:24:52  2024-03-23  CAGT00002   163.000000   \n",
       "2       2024-03-20 15:24:52  2024-03-23  CAGT00003    11.000000   \n",
       "3       2024-03-20 15:24:52  2024-03-23  CAGT00004     0.000000   \n",
       "4       2024-03-20 15:24:52  2024-03-23  CAGT00005    28.000000   \n",
       "...                     ...         ...        ...          ...   \n",
       "869311  2024-03-20 15:24:52  2023-12-10  STORA0111 -1891.827156   \n",
       "869312  2024-03-20 15:24:52  2023-12-10  STORA0114  -227.439901   \n",
       "869313  2024-03-20 15:24:52  2023-12-10  STORA0117  -821.041297   \n",
       "869314  2024-03-20 15:24:52  2023-12-10  STORA0120 -6356.674401   \n",
       "869315  2024-03-20 15:24:52  2023-12-10  STORA0123 -1057.287162   \n",
       "\n",
       "       operationalcapacity pointzone  \n",
       "0                                     \n",
       "1                                     \n",
       "2                                     \n",
       "3                                     \n",
       "4                                     \n",
       "...                    ...       ...  \n",
       "869311                                \n",
       "869312                                \n",
       "869313                                \n",
       "869314                                \n",
       "869315                                \n",
       "\n",
       "[869316 rows x 6 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/plview/retrieve/flowsby_points_zone\", auth=HTTPBasicAuth(username, password))\n",
    "print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "#print(j[0])\n",
    "df4= pd.DataFrame(j)\n",
    "df4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# This function loops through every page in a pull and organizes it into a DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_data(username, password, url):\n",
    "  params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "  df = pd.DataFrame()\n",
    "  try:\n",
    "    while True:\n",
    "      r = requests.get(url, auth=HTTPBasicAuth(username, password), params=params, verify=True)\n",
    "      #print(r)\n",
    "      r.raise_for_status()\n",
    "      j = r.json()\n",
    "      #print(j)\n",
    "      print(f\"Page: {params['pageIndex']}\")\n",
    "      if len(j['Data']) == 0:\n",
    "        break\n",
    "      params['pageIndex'] += 1\n",
    "      \n",
    "      new_df = pd.json_normalize(data=j, record_path=\"Data\")\n",
    "      df = pd.concat([df, new_df], ignore_index=True)\n",
    "      time.sleep(1)\n",
    "  except Exception as err:\n",
    "    if r.status_code >= 500:\n",
    "      print (err)\n",
    "    else:\n",
    "      print(r.status_code, r.json())\n",
    "    raise\n",
    "  \n",
    "  return df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following URL as a sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = 'https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?historyRecords=9&regionId=26104'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using the username, password, and url created, pull data with the function get_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>referencedate</th>\n",
       "      <th>pointid</th>\n",
       "      <th>displayname</th>\n",
       "      <th>pipelineid</th>\n",
       "      <th>pipelinedisplayname</th>\n",
       "      <th>pointtypeid</th>\n",
       "      <th>pointtypename</th>\n",
       "      <th>flowdirection</th>\n",
       "      <th>regionid</th>\n",
       "      <th>regionname</th>\n",
       "      <th>subregionid</th>\n",
       "      <th>subregionname</th>\n",
       "      <th>stateid</th>\n",
       "      <th>statename</th>\n",
       "      <th>countyid</th>\n",
       "      <th>countyname</th>\n",
       "      <th>locprop</th>\n",
       "      <th>pointisactive</th>\n",
       "      <th>operatingcapacity</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>727</td>\n",
       "      <td>North Haven</td>\n",
       "      <td>2</td>\n",
       "      <td>Algonquin Gas Transmission</td>\n",
       "      <td>7</td>\n",
       "      <td>Distribution</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26255</td>\n",
       "      <td>New England</td>\n",
       "      <td>4525</td>\n",
       "      <td>Connecticut</td>\n",
       "      <td>16067</td>\n",
       "      <td>New Haven</td>\n",
       "      <td>00003</td>\n",
       "      <td>1</td>\n",
       "      <td>342.08</td>\n",
       "      <td>-28.354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>728</td>\n",
       "      <td>National Grid - Dey St. (Providence, RI)</td>\n",
       "      <td>2</td>\n",
       "      <td>Algonquin Gas Transmission</td>\n",
       "      <td>7</td>\n",
       "      <td>Distribution</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26255</td>\n",
       "      <td>New England</td>\n",
       "      <td>4557</td>\n",
       "      <td>Rhode Island</td>\n",
       "      <td>16350</td>\n",
       "      <td>Providence</td>\n",
       "      <td>00004</td>\n",
       "      <td>1</td>\n",
       "      <td>157.44</td>\n",
       "      <td>-4.673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>738</td>\n",
       "      <td>Stony Point</td>\n",
       "      <td>2</td>\n",
       "      <td>Algonquin Gas Transmission</td>\n",
       "      <td>7</td>\n",
       "      <td>Distribution</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26256</td>\n",
       "      <td>NY/NJ</td>\n",
       "      <td>4550</td>\n",
       "      <td>New York</td>\n",
       "      <td>16460</td>\n",
       "      <td>Rockland</td>\n",
       "      <td>00040</td>\n",
       "      <td>1</td>\n",
       "      <td>235.19</td>\n",
       "      <td>-5.025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>739</td>\n",
       "      <td>Peekskill</td>\n",
       "      <td>2</td>\n",
       "      <td>Algonquin Gas Transmission</td>\n",
       "      <td>7</td>\n",
       "      <td>Distribution</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26256</td>\n",
       "      <td>NY/NJ</td>\n",
       "      <td>4550</td>\n",
       "      <td>New York</td>\n",
       "      <td>17030</td>\n",
       "      <td>Westchester</td>\n",
       "      <td>00041</td>\n",
       "      <td>1</td>\n",
       "      <td>67.14</td>\n",
       "      <td>-6.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>748</td>\n",
       "      <td>National Grid - Ponkapoag</td>\n",
       "      <td>2</td>\n",
       "      <td>Algonquin Gas Transmission</td>\n",
       "      <td>7</td>\n",
       "      <td>Distribution</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26255</td>\n",
       "      <td>New England</td>\n",
       "      <td>4539</td>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>16095</td>\n",
       "      <td>Norfolk</td>\n",
       "      <td>00052</td>\n",
       "      <td>1</td>\n",
       "      <td>393.81</td>\n",
       "      <td>-11.707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24326</th>\n",
       "      <td>2024-06-13</td>\n",
       "      <td>48974</td>\n",
       "      <td>Rel Lateral MP 1.0 W to E NL</td>\n",
       "      <td>214</td>\n",
       "      <td>Transcontinental Pipeline</td>\n",
       "      <td>13</td>\n",
       "      <td>Compressor</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4556</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>15589</td>\n",
       "      <td>Lancaster</td>\n",
       "      <td>9012723</td>\n",
       "      <td>1</td>\n",
       "      <td>453.50</td>\n",
       "      <td>164.977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24327</th>\n",
       "      <td>2024-06-13</td>\n",
       "      <td>48983</td>\n",
       "      <td>TCO Deliveries</td>\n",
       "      <td>75</td>\n",
       "      <td>Equitrans Transmission</td>\n",
       "      <td>5</td>\n",
       "      <td>Interstate</td>\n",
       "      <td>Delivery</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4566</td>\n",
       "      <td>West Virginia</td>\n",
       "      <td>17034</td>\n",
       "      <td>Wetzel</td>\n",
       "      <td>TCO_DEL</td>\n",
       "      <td>1</td>\n",
       "      <td>100.00</td>\n",
       "      <td>-169.932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24328</th>\n",
       "      <td>2024-06-13</td>\n",
       "      <td>49000</td>\n",
       "      <td>Heracles IC</td>\n",
       "      <td>75</td>\n",
       "      <td>Equitrans Transmission</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4556</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>14052</td>\n",
       "      <td>Allegheny</td>\n",
       "      <td>M5466401</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>89.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24329</th>\n",
       "      <td>2024-06-13</td>\n",
       "      <td>49088</td>\n",
       "      <td>Mainline Mp 1521.82 Tsb N To S Nl</td>\n",
       "      <td>214</td>\n",
       "      <td>Transcontinental Pipeline</td>\n",
       "      <td>13</td>\n",
       "      <td>Compressor</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26249</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>4564</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>15724</td>\n",
       "      <td>Louisa</td>\n",
       "      <td>9012963</td>\n",
       "      <td>1</td>\n",
       "      <td>2599.00</td>\n",
       "      <td>1682.542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24330</th>\n",
       "      <td>2024-06-13</td>\n",
       "      <td>49097</td>\n",
       "      <td>Line N ILI</td>\n",
       "      <td>144</td>\n",
       "      <td>National Fuel Gas Supply</td>\n",
       "      <td>13</td>\n",
       "      <td>Compressor</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4556</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>15611</td>\n",
       "      <td>Lawrence</td>\n",
       "      <td>LINE N ILI</td>\n",
       "      <td>1</td>\n",
       "      <td>221.53</td>\n",
       "      <td>134.836</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>24331 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      referencedate  pointid                               displayname  \\\n",
       "0        2024-06-04      727                               North Haven   \n",
       "1        2024-06-04      728  National Grid - Dey St. (Providence, RI)   \n",
       "2        2024-06-04      738                               Stony Point   \n",
       "3        2024-06-04      739                                 Peekskill   \n",
       "4        2024-06-04      748                 National Grid - Ponkapoag   \n",
       "...             ...      ...                                       ...   \n",
       "24326    2024-06-13    48974              Rel Lateral MP 1.0 W to E NL   \n",
       "24327    2024-06-13    48983                            TCO Deliveries   \n",
       "24328    2024-06-13    49000                               Heracles IC   \n",
       "24329    2024-06-13    49088         Mainline Mp 1521.82 Tsb N To S Nl   \n",
       "24330    2024-06-13    49097                                Line N ILI   \n",
       "\n",
       "       pipelineid         pipelinedisplayname  pointtypeid  pointtypename  \\\n",
       "0               2  Algonquin Gas Transmission            7   Distribution   \n",
       "1               2  Algonquin Gas Transmission            7   Distribution   \n",
       "2               2  Algonquin Gas Transmission            7   Distribution   \n",
       "3               2  Algonquin Gas Transmission            7   Distribution   \n",
       "4               2  Algonquin Gas Transmission            7   Distribution   \n",
       "...           ...                         ...          ...            ...   \n",
       "24326         214   Transcontinental Pipeline           13     Compressor   \n",
       "24327          75      Equitrans Transmission            5     Interstate   \n",
       "24328          75      Equitrans Transmission           14  Supply Source   \n",
       "24329         214   Transcontinental Pipeline           13     Compressor   \n",
       "24330         144    National Fuel Gas Supply           13     Compressor   \n",
       "\n",
       "      flowdirection  regionid regionname  subregionid subregionname  stateid  \\\n",
       "0          Delivery     26104  Northeast        26255   New England     4525   \n",
       "1          Delivery     26104  Northeast        26255   New England     4557   \n",
       "2          Delivery     26104  Northeast        26256         NY/NJ     4550   \n",
       "3          Delivery     26104  Northeast        26256         NY/NJ     4550   \n",
       "4          Delivery     26104  Northeast        26255   New England     4539   \n",
       "...             ...       ...        ...          ...           ...      ...   \n",
       "24326       Receipt     26104  Northeast        26250    Appalachia     4556   \n",
       "24327      Delivery     26104  Northeast        26250    Appalachia     4566   \n",
       "24328       Receipt     26104  Northeast        26250    Appalachia     4556   \n",
       "24329       Receipt     26104  Northeast        26249      Atlantic     4564   \n",
       "24330       Receipt     26104  Northeast        26250    Appalachia     4556   \n",
       "\n",
       "           statename  countyid   countyname     locprop  pointisactive  \\\n",
       "0        Connecticut     16067    New Haven       00003              1   \n",
       "1       Rhode Island     16350   Providence       00004              1   \n",
       "2           New York     16460     Rockland       00040              1   \n",
       "3           New York     17030  Westchester       00041              1   \n",
       "4      Massachusetts     16095      Norfolk       00052              1   \n",
       "...              ...       ...          ...         ...            ...   \n",
       "24326   Pennsylvania     15589    Lancaster     9012723              1   \n",
       "24327  West Virginia     17034       Wetzel     TCO_DEL              1   \n",
       "24328   Pennsylvania     14052    Allegheny    M5466401              1   \n",
       "24329       Virginia     15724       Louisa     9012963              1   \n",
       "24330   Pennsylvania     15611     Lawrence  LINE N ILI              1   \n",
       "\n",
       "       operatingcapacity    volume  \n",
       "0                 342.08   -28.354  \n",
       "1                 157.44    -4.673  \n",
       "2                 235.19    -5.025  \n",
       "3                  67.14    -6.000  \n",
       "4                 393.81   -11.707  \n",
       "...                  ...       ...  \n",
       "24326             453.50   164.977  \n",
       "24327             100.00  -169.932  \n",
       "24328               0.00    89.000  \n",
       "24329            2599.00  1682.542  \n",
       "24330             221.53   134.836  \n",
       "\n",
       "[24331 rows x 20 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df5 = get_data(username, password, url)\n",
    "df5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "df5.to_csv(\"test.csv\", index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Special Usecases\n",
    "## Large Data Pulls\n",
    "The PointLogic API tends to not like it when calls of pages 20+ are made. In order to circumvent that limit, specific codes for these scenarios are made."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Multi-year historical Pipelineflow data\n",
    "In order to pull historical data that span more than a year, here's a sample script on how to make that data pull using VolumeHistory, credentials, Pipelines, and different PointTypes (Throughputs, Processing, Storage, etc)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# List of pipelines that will be searched\n",
    "# pipeline_id= [2,64,90,205]\n",
    "pipeline_id =[609]\n",
    "# PointId \n",
    "id= {}\n",
    "# StatDate\n",
    "startDate= \"2018-01-01\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This section will loop through every pipelines chosen to pull out the counties thos pipelines cross through. Then using the counties, the next loop will pull the data county by county to ensure there isn't a time out from our API.\n",
    "-  In the URL for county_data, the startDate can be adjusted to match your desired date\n",
    "-  If you'd like to pull a specific pointTypeId, replace county_data URL with the following sample with poinTypeId on whichever number you want f\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?startDate={startDate}&pipelineId={id}&pointTypeId=11&countyId={county}\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.DataFrame()\n",
    "\n",
    "#Loop through every pipeline\n",
    "for id in pipeline_id:\n",
    "    get_county = get_data(username, password, f\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?historyRecords=7&pipelineId={id}\")\n",
    "    \n",
    "    #Turn countyid into an array to remove NA\n",
    "    test = get_county['countyid'].unique()\n",
    "    test = test[~np.isnan(test)].astype('int64')\n",
    "    \n",
    "    #Loop through each county for the pipeline to pull the data into a dataframe \n",
    "    for county in test:\n",
    "        if pd.isna(county):\n",
    "            continue\n",
    "        county_data= get_data(username, password, f\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?startDate={startDate}&pipelineId={id}&countyId={county}\")\n",
    "        df = pd.concat([df, county_data])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pull Natural Gas Production\n",
    "If you'd like to pull 20+ pages of data, use this sample script that will allow the API to return every page."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# RegionsId can be replaced with SubregionID or StateID, or add any other parameter to the URL\n",
    "regions= []\n",
    "startDate= \"\"\n",
    "df= pd.DataFrame()\n",
    "\n",
    "# Idea, use the PLviews for natgas production to be the reference data. Then use a column to break down the large production data\n",
    "for region in regions:\n",
    "    region_data= get_data(username, password, \"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/production/naturalGas?startDate={startDate}&regionId={region}\")\n",
    "    df = pd.concat([df, region_data])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pull Gas Production PLView Historical\n",
    "To pull older data than PLView/gasproduction_point, use the Pipeline flow endpoint. You can call both pointTypeIds (2 and 14) at once. This can be filtered down to the Region, State, Dates you want."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>referencedate</th>\n",
       "      <th>pointid</th>\n",
       "      <th>displayname</th>\n",
       "      <th>pipelineid</th>\n",
       "      <th>pipelinedisplayname</th>\n",
       "      <th>pointtypeid</th>\n",
       "      <th>pointtypename</th>\n",
       "      <th>flowdirection</th>\n",
       "      <th>regionid</th>\n",
       "      <th>regionname</th>\n",
       "      <th>subregionid</th>\n",
       "      <th>subregionname</th>\n",
       "      <th>stateid</th>\n",
       "      <th>statename</th>\n",
       "      <th>countyid</th>\n",
       "      <th>countyname</th>\n",
       "      <th>locprop</th>\n",
       "      <th>pointisactive</th>\n",
       "      <th>operatingcapacity</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1309</td>\n",
       "      <td>Beaver Plant (CNG)</td>\n",
       "      <td>4</td>\n",
       "      <td>ANR Pipeline</td>\n",
       "      <td>2</td>\n",
       "      <td>Processing</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>14166</td>\n",
       "      <td>Beaver</td>\n",
       "      <td>163450</td>\n",
       "      <td>1</td>\n",
       "      <td>121.0</td>\n",
       "      <td>24.791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1437</td>\n",
       "      <td>Blue Forest</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>2</td>\n",
       "      <td>Processing</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4568</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>16752</td>\n",
       "      <td>Sweetwater</td>\n",
       "      <td>891645</td>\n",
       "      <td>1</td>\n",
       "      <td>149.0</td>\n",
       "      <td>0.170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1498</td>\n",
       "      <td>Echo Springs</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>2</td>\n",
       "      <td>Processing</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4568</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>16752</td>\n",
       "      <td>Sweetwater</td>\n",
       "      <td>800235</td>\n",
       "      <td>1</td>\n",
       "      <td>238.0</td>\n",
       "      <td>90.164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1746</td>\n",
       "      <td>MGR/CIG (LOS) Lost Cabin</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>2</td>\n",
       "      <td>Processing</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4568</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>14997</td>\n",
       "      <td>Fremont</td>\n",
       "      <td>895009</td>\n",
       "      <td>1</td>\n",
       "      <td>142.0</td>\n",
       "      <td>17.468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1755</td>\n",
       "      <td>Mewbourn</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>2</td>\n",
       "      <td>Processing</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4524</td>\n",
       "      <td>Colorado</td>\n",
       "      <td>17024</td>\n",
       "      <td>Weld</td>\n",
       "      <td>800421</td>\n",
       "      <td>1</td>\n",
       "      <td>324.0</td>\n",
       "      <td>232.269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16729</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1689</td>\n",
       "      <td>Frederick</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4524</td>\n",
       "      <td>Colorado</td>\n",
       "      <td>15600</td>\n",
       "      <td>Las Animas</td>\n",
       "      <td>800251</td>\n",
       "      <td>1</td>\n",
       "      <td>23.0</td>\n",
       "      <td>3.600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16730</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1497</td>\n",
       "      <td>East Rock Springs</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4568</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>16752</td>\n",
       "      <td>Sweetwater</td>\n",
       "      <td>800234</td>\n",
       "      <td>1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16731</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1036</td>\n",
       "      <td>Green Station</td>\n",
       "      <td>4</td>\n",
       "      <td>ANR Pipeline</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>14171</td>\n",
       "      <td>Beckham</td>\n",
       "      <td>89222</td>\n",
       "      <td>1</td>\n",
       "      <td>40.0</td>\n",
       "      <td>6.600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16732</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1448</td>\n",
       "      <td>Burro Canyon</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4524</td>\n",
       "      <td>Colorado</td>\n",
       "      <td>15600</td>\n",
       "      <td>Las Animas</td>\n",
       "      <td>800107</td>\n",
       "      <td>1</td>\n",
       "      <td>194.0</td>\n",
       "      <td>18.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16733</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1452</td>\n",
       "      <td>Merit/CIG (CLS) Carlson Park</td>\n",
       "      <td>33</td>\n",
       "      <td>Colorado Interstate Gas</td>\n",
       "      <td>14</td>\n",
       "      <td>Supply Source</td>\n",
       "      <td>Receipt</td>\n",
       "      <td>26106.0</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>26258.0</td>\n",
       "      <td>Rocky Mountains</td>\n",
       "      <td>4568</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>16201</td>\n",
       "      <td>Park</td>\n",
       "      <td>891706</td>\n",
       "      <td>1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>2.150</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16734 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      referencedate  pointid                   displayname  pipelineid  \\\n",
       "0        2024-05-02     1309            Beaver Plant (CNG)           4   \n",
       "1        2024-05-02     1437                   Blue Forest          33   \n",
       "2        2024-05-02     1498                  Echo Springs          33   \n",
       "3        2024-05-02     1746      MGR/CIG (LOS) Lost Cabin          33   \n",
       "4        2024-05-02     1755                      Mewbourn          33   \n",
       "...             ...      ...                           ...         ...   \n",
       "16729    2024-04-25     1689                     Frederick          33   \n",
       "16730    2024-04-25     1497             East Rock Springs          33   \n",
       "16731    2024-04-25     1036                 Green Station           4   \n",
       "16732    2024-04-25     1448                  Burro Canyon          33   \n",
       "16733    2024-04-25     1452  Merit/CIG (CLS) Carlson Park          33   \n",
       "\n",
       "           pipelinedisplayname  pointtypeid  pointtypename flowdirection  \\\n",
       "0                 ANR Pipeline            2     Processing       Receipt   \n",
       "1      Colorado Interstate Gas            2     Processing       Receipt   \n",
       "2      Colorado Interstate Gas            2     Processing       Receipt   \n",
       "3      Colorado Interstate Gas            2     Processing       Receipt   \n",
       "4      Colorado Interstate Gas            2     Processing       Receipt   \n",
       "...                        ...          ...            ...           ...   \n",
       "16729  Colorado Interstate Gas           14  Supply Source       Receipt   \n",
       "16730  Colorado Interstate Gas           14  Supply Source       Receipt   \n",
       "16731             ANR Pipeline           14  Supply Source       Receipt   \n",
       "16732  Colorado Interstate Gas           14  Supply Source       Receipt   \n",
       "16733  Colorado Interstate Gas           14  Supply Source       Receipt   \n",
       "\n",
       "       regionid      regionname  subregionid    subregionname  stateid  \\\n",
       "0       26105.0   Mid-Continent      26252.0     Lower Midcon     4554   \n",
       "1       26106.0  Rocky Mountain      26258.0  Rocky Mountains     4568   \n",
       "2       26106.0  Rocky Mountain      26258.0  Rocky Mountains     4568   \n",
       "3       26106.0  Rocky Mountain      26258.0  Rocky Mountains     4568   \n",
       "4       26106.0  Rocky Mountain      26258.0  Rocky Mountains     4524   \n",
       "...         ...             ...          ...              ...      ...   \n",
       "16729   26106.0  Rocky Mountain      26258.0  Rocky Mountains     4524   \n",
       "16730   26106.0  Rocky Mountain      26258.0  Rocky Mountains     4568   \n",
       "16731   26105.0   Mid-Continent      26252.0     Lower Midcon     4554   \n",
       "16732   26106.0  Rocky Mountain      26258.0  Rocky Mountains     4524   \n",
       "16733   26106.0  Rocky Mountain      26258.0  Rocky Mountains     4568   \n",
       "\n",
       "      statename  countyid  countyname locprop  pointisactive  \\\n",
       "0      Oklahoma     14166      Beaver  163450              1   \n",
       "1       Wyoming     16752  Sweetwater  891645              1   \n",
       "2       Wyoming     16752  Sweetwater  800235              1   \n",
       "3       Wyoming     14997     Fremont  895009              1   \n",
       "4      Colorado     17024        Weld  800421              1   \n",
       "...         ...       ...         ...     ...            ...   \n",
       "16729  Colorado     15600  Las Animas  800251              1   \n",
       "16730   Wyoming     16752  Sweetwater  800234              1   \n",
       "16731  Oklahoma     14171     Beckham   89222              1   \n",
       "16732  Colorado     15600  Las Animas  800107              1   \n",
       "16733   Wyoming     16201        Park  891706              1   \n",
       "\n",
       "       operatingcapacity   volume  \n",
       "0                  121.0   24.791  \n",
       "1                  149.0    0.170  \n",
       "2                  238.0   90.164  \n",
       "3                  142.0   17.468  \n",
       "4                  324.0  232.269  \n",
       "...                  ...      ...  \n",
       "16729               23.0    3.600  \n",
       "16730               11.0    0.550  \n",
       "16731               40.0    6.600  \n",
       "16732              194.0   18.500  \n",
       "16733                8.0    2.150  \n",
       "\n",
       "[16734 rows x 20 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url= \"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?pointTypeId=2%2C14\"\n",
    "\n",
    "get_data(username, password, url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To pull data older than PLView/gasproduction_producingarea, use the production/naturalGas endpoint. Using Region, Subregion, State, and startDate as parameters, you'll be able to return the same data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>datasettype</th>\n",
       "      <th>regionid</th>\n",
       "      <th>region</th>\n",
       "      <th>subregionid</th>\n",
       "      <th>subregion</th>\n",
       "      <th>stateid</th>\n",
       "      <th>state</th>\n",
       "      <th>producingareaid</th>\n",
       "      <th>producingarea</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-05-01</td>\n",
       "      <td>Modeled Dry</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26249</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>4564</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>4288</td>\n",
       "      <td>Other-VA</td>\n",
       "      <td>224.918197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-05-01</td>\n",
       "      <td>Modeled Wellhead</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26249</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>4564</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>4288</td>\n",
       "      <td>Other-VA</td>\n",
       "      <td>213.065372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-05-01</td>\n",
       "      <td>Modeled Dry</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4535</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>4258</td>\n",
       "      <td>Other-KY</td>\n",
       "      <td>183.403263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-05-01</td>\n",
       "      <td>Modeled Wellhead</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4535</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>4258</td>\n",
       "      <td>Other-KY</td>\n",
       "      <td>138.409205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-05-01</td>\n",
       "      <td>Modeled Dry</td>\n",
       "      <td>26104</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>26250</td>\n",
       "      <td>Appalachia</td>\n",
       "      <td>4553</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>4275</td>\n",
       "      <td>Other-OH</td>\n",
       "      <td>1.356105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13720</th>\n",
       "      <td>2024-03-02</td>\n",
       "      <td>Canadian Modeled Wellhead</td>\n",
       "      <td>26158</td>\n",
       "      <td>Canada</td>\n",
       "      <td>26423</td>\n",
       "      <td>Western Canada</td>\n",
       "      <td>22864</td>\n",
       "      <td>Saskatchewan</td>\n",
       "      <td>24205</td>\n",
       "      <td>Other Southwest-SK</td>\n",
       "      <td>148.085720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13721</th>\n",
       "      <td>2024-03-02</td>\n",
       "      <td>Canadian Modeled Dry</td>\n",
       "      <td>26158</td>\n",
       "      <td>Canada</td>\n",
       "      <td>26423</td>\n",
       "      <td>Western Canada</td>\n",
       "      <td>22864</td>\n",
       "      <td>Saskatchewan</td>\n",
       "      <td>24206</td>\n",
       "      <td>Viking-SK</td>\n",
       "      <td>76.718827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13722</th>\n",
       "      <td>2024-03-02</td>\n",
       "      <td>Canadian Modeled Wellhead</td>\n",
       "      <td>26158</td>\n",
       "      <td>Canada</td>\n",
       "      <td>26423</td>\n",
       "      <td>Western Canada</td>\n",
       "      <td>22864</td>\n",
       "      <td>Saskatchewan</td>\n",
       "      <td>24206</td>\n",
       "      <td>Viking-SK</td>\n",
       "      <td>91.791990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13723</th>\n",
       "      <td>2024-03-02</td>\n",
       "      <td>Modeled Dry</td>\n",
       "      <td>26159</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>0</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>4529</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>4233</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>1779.588923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13724</th>\n",
       "      <td>2024-03-02</td>\n",
       "      <td>Modeled Wellhead</td>\n",
       "      <td>26159</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>0</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>4529</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>4233</td>\n",
       "      <td>Gulf of Mexico</td>\n",
       "      <td>2048.235493</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13725 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             date                datasettype  regionid          region  \\\n",
       "0      2024-05-01                Modeled Dry     26104       Northeast   \n",
       "1      2024-05-01           Modeled Wellhead     26104       Northeast   \n",
       "2      2024-05-01                Modeled Dry     26104       Northeast   \n",
       "3      2024-05-01           Modeled Wellhead     26104       Northeast   \n",
       "4      2024-05-01                Modeled Dry     26104       Northeast   \n",
       "...           ...                        ...       ...             ...   \n",
       "13720  2024-03-02  Canadian Modeled Wellhead     26158          Canada   \n",
       "13721  2024-03-02       Canadian Modeled Dry     26158          Canada   \n",
       "13722  2024-03-02  Canadian Modeled Wellhead     26158          Canada   \n",
       "13723  2024-03-02                Modeled Dry     26159  Gulf of Mexico   \n",
       "13724  2024-03-02           Modeled Wellhead     26159  Gulf of Mexico   \n",
       "\n",
       "       subregionid       subregion  stateid           state  producingareaid  \\\n",
       "0            26249        Atlantic     4564        Virginia             4288   \n",
       "1            26249        Atlantic     4564        Virginia             4288   \n",
       "2            26250      Appalachia     4535        Kentucky             4258   \n",
       "3            26250      Appalachia     4535        Kentucky             4258   \n",
       "4            26250      Appalachia     4553            Ohio             4275   \n",
       "...            ...             ...      ...             ...              ...   \n",
       "13720        26423  Western Canada    22864    Saskatchewan            24205   \n",
       "13721        26423  Western Canada    22864    Saskatchewan            24206   \n",
       "13722        26423  Western Canada    22864    Saskatchewan            24206   \n",
       "13723            0  Gulf of Mexico     4529  Gulf of Mexico             4233   \n",
       "13724            0  Gulf of Mexico     4529  Gulf of Mexico             4233   \n",
       "\n",
       "            producingarea       volume  \n",
       "0                Other-VA   224.918197  \n",
       "1                Other-VA   213.065372  \n",
       "2                Other-KY   183.403263  \n",
       "3                Other-KY   138.409205  \n",
       "4                Other-OH     1.356105  \n",
       "...                   ...          ...  \n",
       "13720  Other Southwest-SK   148.085720  \n",
       "13721           Viking-SK    76.718827  \n",
       "13722           Viking-SK    91.791990  \n",
       "13723      Gulf of Mexico  1779.588923  \n",
       "13724      Gulf of Mexico  2048.235493  \n",
       "\n",
       "[13725 rows x 11 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url= \"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/production/naturalGas\"\n",
    "\n",
    "get_data(username, password, url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pull Market Balance PLView Historical\n",
    "To pull data older than PLView/marketbalances_regions and marketbalances_uslower48, use the volumeHistory endpoint. Using Region/Subrergion you want retreive, filter with reportDate as parameters, you'll be able to return the same data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "url= \"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/supplyDemand/region/26265\"\n",
    "\n",
    "get_data(username, password, url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pull Throughput PLView Historical\n",
    "To pull data older than PLView/pipelineflow_throughputs, use the volumeHistory endpoint. Using pointTypeId= 12, filter with Region, Subregion, State, and startDate as parameters, you'll be able to return the same data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Page: 1\n",
      "Page: 2\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>referencedate</th>\n",
       "      <th>pointid</th>\n",
       "      <th>displayname</th>\n",
       "      <th>pipelineid</th>\n",
       "      <th>pipelinedisplayname</th>\n",
       "      <th>pointtypeid</th>\n",
       "      <th>pointtypename</th>\n",
       "      <th>flowdirection</th>\n",
       "      <th>regionid</th>\n",
       "      <th>regionname</th>\n",
       "      <th>subregionid</th>\n",
       "      <th>subregionname</th>\n",
       "      <th>stateid</th>\n",
       "      <th>statename</th>\n",
       "      <th>countyid</th>\n",
       "      <th>countyname</th>\n",
       "      <th>locprop</th>\n",
       "      <th>pointisactive</th>\n",
       "      <th>operatingcapacity</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>712</td>\n",
       "      <td>MS to TN</td>\n",
       "      <td>59</td>\n",
       "      <td>American Midstream Alatenn</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26107.0</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>26260.0</td>\n",
       "      <td>Southern Corridor</td>\n",
       "      <td>4542</td>\n",
       "      <td>Mississippi</td>\n",
       "      <td>14038.0</td>\n",
       "      <td>Alcorn</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>18.0</td>\n",
       "      <td>12.92100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>713</td>\n",
       "      <td>MS to AL</td>\n",
       "      <td>59</td>\n",
       "      <td>American Midstream Alatenn</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26107.0</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>26260.0</td>\n",
       "      <td>Southern Corridor</td>\n",
       "      <td>4542</td>\n",
       "      <td>Mississippi</td>\n",
       "      <td>16807.0</td>\n",
       "      <td>Tishomingo</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>200.0</td>\n",
       "      <td>6.78800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1127</td>\n",
       "      <td>OK to KS East</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>15482.0</td>\n",
       "      <td>Kay</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>40.0</td>\n",
       "      <td>3.64800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1128</td>\n",
       "      <td>OK to AR</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>15622.0</td>\n",
       "      <td>Le Flore</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1122.00200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-05-02</td>\n",
       "      <td>1129</td>\n",
       "      <td>AR to LA</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4522</td>\n",
       "      <td>Arkansas</td>\n",
       "      <td>15560.0</td>\n",
       "      <td>Lafayette</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>850.0</td>\n",
       "      <td>66.68324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3843</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1129</td>\n",
       "      <td>AR to LA</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4522</td>\n",
       "      <td>Arkansas</td>\n",
       "      <td>15560.0</td>\n",
       "      <td>Lafayette</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>850.0</td>\n",
       "      <td>53.26308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3844</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1128</td>\n",
       "      <td>OK to AR</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>15622.0</td>\n",
       "      <td>Le Flore</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1067.71900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3845</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>712</td>\n",
       "      <td>MS to TN</td>\n",
       "      <td>59</td>\n",
       "      <td>American Midstream Alatenn</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26107.0</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>26260.0</td>\n",
       "      <td>Southern Corridor</td>\n",
       "      <td>4542</td>\n",
       "      <td>Mississippi</td>\n",
       "      <td>14038.0</td>\n",
       "      <td>Alcorn</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>18.0</td>\n",
       "      <td>17.04300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3846</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>713</td>\n",
       "      <td>MS to AL</td>\n",
       "      <td>59</td>\n",
       "      <td>American Midstream Alatenn</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26107.0</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>26260.0</td>\n",
       "      <td>Southern Corridor</td>\n",
       "      <td>4542</td>\n",
       "      <td>Mississippi</td>\n",
       "      <td>16807.0</td>\n",
       "      <td>Tishomingo</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>200.0</td>\n",
       "      <td>2.81300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3847</th>\n",
       "      <td>2024-04-25</td>\n",
       "      <td>1127</td>\n",
       "      <td>OK to KS East</td>\n",
       "      <td>25</td>\n",
       "      <td>Enable Gas Transmission</td>\n",
       "      <td>12</td>\n",
       "      <td>Throughput</td>\n",
       "      <td>TD1</td>\n",
       "      <td>26105.0</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>26252.0</td>\n",
       "      <td>Lower Midcon</td>\n",
       "      <td>4554</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>15482.0</td>\n",
       "      <td>Kay</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>40.0</td>\n",
       "      <td>3.35400</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3848 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     referencedate  pointid    displayname  pipelineid  \\\n",
       "0       2024-05-02      712       MS to TN          59   \n",
       "1       2024-05-02      713       MS to AL          59   \n",
       "2       2024-05-02     1127  OK to KS East          25   \n",
       "3       2024-05-02     1128       OK to AR          25   \n",
       "4       2024-05-02     1129       AR to LA          25   \n",
       "...            ...      ...            ...         ...   \n",
       "3843    2024-04-25     1129       AR to LA          25   \n",
       "3844    2024-04-25     1128       OK to AR          25   \n",
       "3845    2024-04-25      712       MS to TN          59   \n",
       "3846    2024-04-25      713       MS to AL          59   \n",
       "3847    2024-04-25     1127  OK to KS East          25   \n",
       "\n",
       "             pipelinedisplayname  pointtypeid pointtypename flowdirection  \\\n",
       "0     American Midstream Alatenn           12    Throughput           TD1   \n",
       "1     American Midstream Alatenn           12    Throughput           TD1   \n",
       "2        Enable Gas Transmission           12    Throughput           TD1   \n",
       "3        Enable Gas Transmission           12    Throughput           TD1   \n",
       "4        Enable Gas Transmission           12    Throughput           TD1   \n",
       "...                          ...          ...           ...           ...   \n",
       "3843     Enable Gas Transmission           12    Throughput           TD1   \n",
       "3844     Enable Gas Transmission           12    Throughput           TD1   \n",
       "3845  American Midstream Alatenn           12    Throughput           TD1   \n",
       "3846  American Midstream Alatenn           12    Throughput           TD1   \n",
       "3847     Enable Gas Transmission           12    Throughput           TD1   \n",
       "\n",
       "      regionid     regionname  subregionid      subregionname  stateid  \\\n",
       "0      26107.0      Southeast      26260.0  Southern Corridor     4542   \n",
       "1      26107.0      Southeast      26260.0  Southern Corridor     4542   \n",
       "2      26105.0  Mid-Continent      26252.0       Lower Midcon     4554   \n",
       "3      26105.0  Mid-Continent      26252.0       Lower Midcon     4554   \n",
       "4      26105.0  Mid-Continent      26252.0       Lower Midcon     4522   \n",
       "...        ...            ...          ...                ...      ...   \n",
       "3843   26105.0  Mid-Continent      26252.0       Lower Midcon     4522   \n",
       "3844   26105.0  Mid-Continent      26252.0       Lower Midcon     4554   \n",
       "3845   26107.0      Southeast      26260.0  Southern Corridor     4542   \n",
       "3846   26107.0      Southeast      26260.0  Southern Corridor     4542   \n",
       "3847   26105.0  Mid-Continent      26252.0       Lower Midcon     4554   \n",
       "\n",
       "        statename  countyid  countyname locprop  pointisactive  \\\n",
       "0     Mississippi   14038.0      Alcorn                      1   \n",
       "1     Mississippi   16807.0  Tishomingo                      1   \n",
       "2        Oklahoma   15482.0         Kay                      1   \n",
       "3        Oklahoma   15622.0    Le Flore                      1   \n",
       "4        Arkansas   15560.0   Lafayette                      1   \n",
       "...           ...       ...         ...     ...            ...   \n",
       "3843     Arkansas   15560.0   Lafayette                      1   \n",
       "3844     Oklahoma   15622.0    Le Flore                      1   \n",
       "3845  Mississippi   14038.0      Alcorn                      1   \n",
       "3846  Mississippi   16807.0  Tishomingo                      1   \n",
       "3847     Oklahoma   15482.0         Kay                      1   \n",
       "\n",
       "      operatingcapacity      volume  \n",
       "0                  18.0    12.92100  \n",
       "1                 200.0     6.78800  \n",
       "2                  40.0     3.64800  \n",
       "3                1000.0  1122.00200  \n",
       "4                 850.0    66.68324  \n",
       "...                 ...         ...  \n",
       "3843              850.0    53.26308  \n",
       "3844             1000.0  1067.71900  \n",
       "3845               18.0    17.04300  \n",
       "3846              200.0     2.81300  \n",
       "3847               40.0     3.35400  \n",
       "\n",
       "[3848 rows x 20 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url= \"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/volumeHistory/pipelineFlows?pointTypeId=12\"\n",
    "\n",
    "get_data(username, password, url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pull Multi-Year Regional Flows\n",
    "If you're looking to pull Regional Flows Historical and the total amount of pages is greater than 15, the following script will subdivide the call into regions of the US and then put them together. The startDate can be adjusted in the URL to match what you're looking for."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\n",
    "    \"pageSize\": 10000,\n",
    "    \"pageIndex\": 1\n",
    "  }\n",
    "r = requests.get(\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/lookup_region\", auth=HTTPBasicAuth(username, password), params=params)\n",
    "#print(r)\n",
    "r.raise_for_status()\n",
    "j = r.json()\n",
    "df1= pd.DataFrame.from_dict(j)\n",
    "df2 = df1[2:]\n",
    "\n",
    "list = df2['id'].tolist()\n",
    "names = df2['name'].tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mid-Continent\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Page: 6\n",
      "Page: 7\n",
      "Northeast\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Rocky Mountain\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Southeast\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Page: 6\n",
      "Page: 7\n",
      "Texas\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Page: 6\n",
      "Western\n",
      "Page: 1\n",
      "Page: 2\n",
      "Page: 3\n",
      "Page: 4\n",
      "Page: 5\n",
      "Page: 6\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>regionid</th>\n",
       "      <th>region_point_of_view</th>\n",
       "      <th>subgrouping</th>\n",
       "      <th>subgroup_ranking</th>\n",
       "      <th>name</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2014-04-19</td>\n",
       "      <td>26105</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Group 1</td>\n",
       "      <td>Midwest &amp; Appalachia</td>\n",
       "      <td>1270.520996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2014-04-19</td>\n",
       "      <td>26105</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Group 1.1</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>1271.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2014-04-20</td>\n",
       "      <td>26105</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Group 1</td>\n",
       "      <td>Midwest &amp; Appalachia</td>\n",
       "      <td>1307.224992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2014-04-20</td>\n",
       "      <td>26105</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Group 1.1</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>1307.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2014-04-21</td>\n",
       "      <td>26105</td>\n",
       "      <td>Mid-Continent</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Group 1</td>\n",
       "      <td>Midwest &amp; Appalachia</td>\n",
       "      <td>1173.135008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45535</th>\n",
       "      <td>2024-05-18</td>\n",
       "      <td>26109</td>\n",
       "      <td>Western</td>\n",
       "      <td>Western</td>\n",
       "      <td>Group 5.2</td>\n",
       "      <td>Net Flows</td>\n",
       "      <td>3390.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45536</th>\n",
       "      <td>2024-05-19</td>\n",
       "      <td>26109</td>\n",
       "      <td>Western</td>\n",
       "      <td>Western</td>\n",
       "      <td>Group 5.2</td>\n",
       "      <td>Net Flows</td>\n",
       "      <td>3141.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45537</th>\n",
       "      <td>2024-05-20</td>\n",
       "      <td>26109</td>\n",
       "      <td>Western</td>\n",
       "      <td>Western</td>\n",
       "      <td>Group 5.2</td>\n",
       "      <td>Net Flows</td>\n",
       "      <td>3337.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45538</th>\n",
       "      <td>2024-05-21</td>\n",
       "      <td>26109</td>\n",
       "      <td>Western</td>\n",
       "      <td>Western</td>\n",
       "      <td>Group 5.2</td>\n",
       "      <td>Net Flows</td>\n",
       "      <td>3265.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45539</th>\n",
       "      <td>2024-05-22</td>\n",
       "      <td>26109</td>\n",
       "      <td>Western</td>\n",
       "      <td>Western</td>\n",
       "      <td>Group 5.2</td>\n",
       "      <td>Net Flows</td>\n",
       "      <td>3281.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>269445 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             date  regionid region_point_of_view subgrouping subgroup_ranking  \\\n",
       "0      2014-04-19     26105        Mid-Continent   Northeast          Group 1   \n",
       "1      2014-04-19     26105        Mid-Continent   Northeast        Group 1.1   \n",
       "2      2014-04-20     26105        Mid-Continent   Northeast          Group 1   \n",
       "3      2014-04-20     26105        Mid-Continent   Northeast        Group 1.1   \n",
       "4      2014-04-21     26105        Mid-Continent   Northeast          Group 1   \n",
       "...           ...       ...                  ...         ...              ...   \n",
       "45535  2024-05-18     26109              Western     Western        Group 5.2   \n",
       "45536  2024-05-19     26109              Western     Western        Group 5.2   \n",
       "45537  2024-05-20     26109              Western     Western        Group 5.2   \n",
       "45538  2024-05-21     26109              Western     Western        Group 5.2   \n",
       "45539  2024-05-22     26109              Western     Western        Group 5.2   \n",
       "\n",
       "                       name       volume  \n",
       "0      Midwest & Appalachia  1270.520996  \n",
       "1                 Northeast  1271.000000  \n",
       "2      Midwest & Appalachia  1307.224992  \n",
       "3                 Northeast  1307.000000  \n",
       "4      Midwest & Appalachia  1173.135008  \n",
       "...                     ...          ...  \n",
       "45535             Net Flows  3390.000000  \n",
       "45536             Net Flows  3141.000000  \n",
       "45537             Net Flows  3337.000000  \n",
       "45538             Net Flows  3265.000000  \n",
       "45539             Net Flows  3281.000000  \n",
       "\n",
       "[269445 rows x 7 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df= pd.DataFrame()\n",
    "for id, name in zip(list, names): \n",
    "    print(name)\n",
    "\n",
    "    url = f\"https://api.connect.ihsmarkit.com/cs/v1/pointlogic/regionalFlows/regionSummary?startDate=2014-01-01&regionId={id}\"\n",
    "    data_df= get_data(username, password, url)\n",
    "\n",
    "    df= pd.concat([df, data_df])\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
